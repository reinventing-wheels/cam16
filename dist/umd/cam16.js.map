{"version":3,"file":"cam16.js","sources":["../../src/math.ts","../../src/illuminants/cie1931.ts","../../src/util.ts","../../src/transforms/forward.ts","../../src/transforms/reverse.ts","../../src/cam16.ts","../../src/cam16ucs.ts"],"sourcesContent":["export const {\n  abs, acos, acosh, asin, asinh, atan, atan2, atanh, cbrt, ceil, clz32,\n  cos, cosh, exp, expm1, floor, fround, hypot, imul, log, log10, log1p,\n  log2, max, min, pow, random, round, sign, sin, sinh, sqrt, tan, tanh,\n  trunc, E, LN10, LN2, LOG10E, LOG2E, PI, SQRT1_2, SQRT2\n} = Math\n\nexport const {\n  isFinite,\n  isInteger,\n  isNaN,\n  isSafeInteger,\n  parseFloat,\n  parseInt,\n  EPSILON,\n  MAX_SAFE_INTEGER,\n  MAX_VALUE,\n  MIN_SAFE_INTEGER,\n  MIN_VALUE,\n  NEGATIVE_INFINITY,\n  POSITIVE_INFINITY\n} = Number\n\nexport const deg2rad = PI/180\nexport const rad2deg = 180/PI\n\nexport const nan2num = (n: number) =>\n  isNaN(n) ? 0 : isFinite(n) ? n : sign(n) * MAX_VALUE\n","export const A   = [ 109.850, 100,  35.585 ]\nexport const C   = [  98.074, 100, 118.232 ]\nexport const D50 = [  96.422, 100,  82.521 ]\nexport const D55 = [  95.682, 100,  92.149 ]\nexport const D65 = [  95.047, 100, 108.883 ]\nexport const D75 = [  94.972, 100, 122.638 ]\n","// https://docs.scipy.org/doc/numpy/reference/generated/numpy.interp.html\nexport const interp = (xp: number[], fp: number[]) => (x: number) => {\n  for (let i = 1; i < xp.length; i++) {\n    const xʹ = xp[i - 1]\n    const xʺ = xp[i]\n    if (xʹ <= x && x <= xʺ) {\n      const fʹ = fp[i - 1]\n      const fʺ = fp[i]\n      const t = (x - xʹ) / (xʺ - xʹ)\n      return fʹ + t*(fʺ - fʹ)\n    }\n  }\n\n  throw new Error('wtf')\n}\n\n// https://docs.scipy.org/doc/numpy/reference/generated/numpy.searchsorted.html\nexport const searchsorted = (a: number[], v: number) => {\n  if (v < a[0])\n    return 0\n\n  if (v > a[a.length-1])\n    return a.length\n\n  for (let i = 1; i < a.length; i++) {\n    const aʹ = a[i - 1]\n    const aʺ = a[i]\n    if (aʹ <= v && v <= aʺ)\n      return i\n  }\n\n  throw new Error('wtf')\n}\n","import { atan2, cos, sqrt, hypot, abs, sign, deg2rad, rad2deg } from '../math'\nimport { searchsorted } from '../util'\nimport { CAM16 } from '../cam16'\n\nexport const forward = (cam: CAM16, RGB_c: number[]) => {\n  // Step 4: Calculate the post-adaptation cone response (resulting in\n  //         dynamic range compression)\n  const α_0 = (cam.F_L * abs(RGB_c[0]) / 100)**0.42\n  const α_1 = (cam.F_L * abs(RGB_c[1]) / 100)**0.42\n  const α_2 = (cam.F_L * abs(RGB_c[2]) / 100)**0.42\n\n  // Omit the 0.1 here; that's canceled out in almost all cases below anyways\n  // (except the computation of `t`).\n  const Rʹ_a = 400 * sign(RGB_c[0]) * α_0/(α_0+27.13) // + 0.1\n  const Gʹ_a = 400 * sign(RGB_c[1]) * α_1/(α_1+27.13) // + 0.1\n  const Bʹ_a = 400 * sign(RGB_c[2]) * α_2/(α_2+27.13) // + 0.1\n\n  // Mix steps 5, 7, and part of step 10 here in one big dot-product.\n  // Step 5: Calculate Redness-Greenness (a) , Yellowness-Blueness (b)\n  //         components and hue angle (h)\n  // Step 7: Calculate achromatic response A\n  const pʹ_2 = 2*Rʹ_a   +    Gʹ_a    +    Bʹ_a/20\n  const a    =   Rʹ_a   - 12*Gʹ_a/11 +    Bʹ_a/11\n  const b    =   Rʹ_a/9 +    Gʹ_a/9  -  2*Bʹ_a/9\n  const u    =   Rʹ_a   +    Gʹ_a    + 21*Bʹ_a/20\n\n  const A = pʹ_2 * cam.N_bb\n  if (A < 0)\n    throw Error('CIECAM02 breakdown')\n\n  // Make sure that h is in [0, 360]\n  const h = (rad2deg*atan2(b, a) + 360) % 360\n\n  // Step 6: Calculate eccentricity (e_t) and hue composition (H), using\n  //         the unique hue data given in Table 2.4.\n  const hʹ = (h - cam.h[0]) % 360 + cam.h[0]\n  const e_t = (cos(deg2rad*hʹ + 2) + 3.8) / 4\n  const i = searchsorted(cam.h, hʹ) - 1\n  const β = cam.e[i+1] * (hʹ - cam.h[i])\n  const H = cam.H[i] + 100*β/(β + cam.e[i]*(cam.h[i+1] - hʹ))\n\n  // Step 8: Calculate the correlate of lightness\n  const J = 100 * (A/cam.A_w)**(cam.c*cam.z)\n\n  // Step 9: Calculate the correlate of brightness\n  const sqrt_J_100 = sqrt(J/100)\n  const Q = (4/cam.c) * sqrt_J_100 * (cam.A_w + 4) * cam.F_L**0.25\n\n  // Step 10: Calculate the correlates of chroma (C), colourfulness (M)\n  //          and saturation (s)\n  //\n  // Note the extra 0.305 here from the adaptation in rgb_a_ above.\n  const t = 50000/13*e_t*cam.N_c*cam.N_cb*hypot(a, b) / (u + 0.305)\n\n  const α = t**0.9 * (1.64 - 0.29**cam.n)**0.73\n  const C = α * sqrt_J_100\n  const M = C * cam.F_L**0.25\n\n  // ENH avoid division by Q=0 here.\n  // s = 100 * numpy.sqrt(M/Q)\n  const s = 50 * sqrt(cam.c*α / (cam.A_w + 4))\n\n  return [J, C, H, h, M, s, Q]\n}\n","import { cos, sin, sqrt, abs, sign, nan2num, deg2rad } from '../math'\nimport { searchsorted } from '../util'\nimport { CAM16 } from '../cam16'\n\nexport const reverse = (cam: CAM16, data: number[], description: string) => {\n  let J, Q, h, α = 0\n\n  if (description[0] === 'J') {\n    J = data[0]\n    // Q perhaps needed for C\n    Q = (4/cam.c) * sqrt(J/100) * (cam.A_w+4) * cam.F_L**0.25\n  }\n  else {\n    // Step 1-1: Compute J from Q (if start from Q)\n    // console.assert(description[0] === 'Q')\n    Q = data[0]\n    J = 6.25 * (cam.c*Q / (cam.A_w+4) / cam.F_L**0.25)**2\n  }\n\n  // Step 1-2: Calculate t from C, M, or s\n  if ('CM'.includes(description[1])) {\n    let M, C\n    if (description[1] === 'M') {\n      M = data[1]\n      C = M / cam.F_L**0.25\n    }\n    else {\n      C = data[1]\n    }\n\n    // If C or M is given and equal 0, the value of `t` cannot\n    // algebraically deduced just by C or M. However, from other\n    // considerations we know that it must be 0. Hence, allow division\n    // by 0 and set nans to 0 afterwards.\n    α = C / sqrt(J/100)\n    α = nan2num(α)\n  }\n  else {\n    // console.assert(description[1] === 's')\n    const s = data[1] / 100\n    // const C = s*s * Q / cam.F_L**0.25\n    α = 4*s*s * (cam.A_w+4) / cam.c\n  }\n\n  const t = (α / (1.64 - 0.29**cam.n)**0.73)**(1/0.9)\n\n  if (description[2] === 'h') {\n    h = data[2]\n  }\n  else {\n    // console.assert(description[2] === 'H')\n    // Step 1-3: Calculate h from H (if start from H)\n    const H = data[2]\n    const i = searchsorted(cam.H, H) - 1\n    const Hi = cam.H[i]\n    const hi = cam.h[i], hi1 = cam.h[i+1]\n    const ei = cam.e[i], ei1 = cam.e[i+1]\n    const hʹ = ((H-Hi)*(ei1*hi-ei*hi1)-100*hi*ei1) / ((H-Hi)*(ei1-ei)-100*ei1)\n    h = hʹ % 360\n  }\n\n  // Step 2: Calculate t, et, p1, p2 and p3\n  const e_t = 0.25 * (cos(deg2rad*h + 2) + 3.8)\n  const A = cam.A_w * (J/100)**(1/cam.c/cam.z)\n  const pʹ_1 = e_t * 50000/13 * cam.N_c * cam.N_cb\n  const pʹ_2 = A / cam.N_bb // no 0.305\n\n  // Step 3: Calculate a and b\n  // ENH Much more straightforward computation of a, b\n  const sin_h = sin(deg2rad*h)\n  const cos_h = cos(deg2rad*h)\n  const γ = 23*(pʹ_2 + 0.305)*t / (23*pʹ_1 + 11*t*cos_h + 108*t*sin_h)\n  const a = γ*cos_h\n  const b = γ*sin_h\n\n  // Step 4: Calculate RGB_a_\n  const Rʹ_a = (460*pʹ_2 + 451*a +  288*b) / 1403\n  const Gʹ_a = (460*pʹ_2 - 891*a -  261*b) / 1403\n  const Bʹ_a = (460*pʹ_2 - 220*a - 6300*b) / 1403\n\n  // Step 5: Calculate RGB_\n  const R_c = sign(Rʹ_a) * 100/cam.F_L * (27.13*abs(Rʹ_a) / (400 - abs(Rʹ_a)))**(1/0.42)\n  const G_c = sign(Gʹ_a) * 100/cam.F_L * (27.13*abs(Gʹ_a) / (400 - abs(Gʹ_a)))**(1/0.42)\n  const B_c = sign(Bʹ_a) * 100/cam.F_L * (27.13*abs(Bʹ_a) / (400 - abs(Bʹ_a)))**(1/0.42)\n\n  return [ R_c, G_c, B_c ]\n}\n","import { PI, exp, sqrt, cbrt, min, max } from './math'\nimport { D65 } from './illuminants/cie1931'\nimport { forward } from './transforms/forward'\nimport { reverse } from './transforms/reverse'\nimport { interp } from './util'\n\nconst M16 = [\n  [+0.401288, +0.650173, -0.051461],\n  [-0.250268, +1.204414, +0.045854],\n  [-0.002079, +0.048952, +0.953127]\n]\n\n// The standard acutally recommends using this approximation as\n// inversion operation.\nconst invM16 = [\n  [+1.86206786, -1.01125463, +0.14918677],\n  [+0.38752654, +0.62144744, -0.00897398],\n  [-0.01584150, -0.03412294, +1.04996444]\n]\n\n// Nc and F are modelled as a function of c, and can be linearly\n// interpolated.\nconst interp_F = interp(\n  [0.525, 0.590, 0.690], // c\n  [0.800, 0.900, 1.000]  // F, N_c\n)\n\nexport class CAM16 {\n  c:     number\n  N_c:   number\n  F_L:   number\n  n:     number\n  z:     number\n  N_bb:  number\n  N_cb:  number\n  A_w:   number\n  h:     number[]\n  e:     number[]\n  H:     number[]\n  Mʹ:    number[][]\n  invMʹ: number[][]\n\n  constructor(c = 0.69, Y_b = 20, L_A = 64/PI/5, wp = D65) {\n    // step0: Calculate all values/parameters which are independent of input\n    //        samples\n    const Y_w = wp[1]\n\n    // console.assert(0.525 <= c && c <= 0.69)\n    const F = interp_F(c)\n    this.c = c\n    this.N_c = F\n\n    const k = 1 / (5*L_A + 1)\n    const k4 = k*k*k*k\n    const l4 = 1 - k4\n    this.F_L = k4*L_A + 0.1*l4*l4*cbrt(5*L_A)\n\n    this.n = Y_b / Y_w\n    this.z = 1.48 + sqrt(this.n)\n    this.N_bb = 0.725 / this.n**0.2\n    this.N_cb = this.N_bb\n\n    const R_w = M16[0][0]*wp[0] + M16[0][1]*wp[1] + M16[0][2]*wp[2]\n    const G_w = M16[1][0]*wp[0] + M16[1][1]*wp[1] + M16[1][2]*wp[2]\n    const B_w = M16[2][0]*wp[0] + M16[2][1]*wp[1] + M16[2][2]*wp[2]\n\n    const D = max(0.0, min(1.0, F*(1-1/3.6*exp((-L_A-42)/92))))\n    const D_r = D*Y_w/R_w + 1 - D\n    const D_g = D*Y_w/G_w + 1 - D\n    const D_b = D*Y_w/B_w + 1 - D\n\n    const R_wc = D_r*R_w\n    const G_wc = D_g*G_w\n    const B_wc = D_b*B_w\n\n    const α_0 = (this.F_L*R_wc/100)**0.42\n    const α_1 = (this.F_L*G_wc/100)**0.42\n    const α_2 = (this.F_L*B_wc/100)**0.42\n\n    const R_aw = 400*α_0/(α_0+27.13)+0.1\n    const G_aw = 400*α_1/(α_1+27.13)+0.1\n    const B_aw = 400*α_2/(α_2+27.13)+0.1\n    this.A_w = (2*R_aw + G_aw + B_aw/20 - 0.305)*this.N_bb\n\n    this.h = [ 20.14,  90.00, 164.25, 237.53, 380.14 ]\n    this.e = [  0.80,   0.70,   1.00,   1.20,   0.80 ]\n    this.H = [  0.00, 100.00, 200.00, 300.00, 400.00 ]\n\n    this.Mʹ = [\n      [M16[0][0]*D_r, M16[0][1]*D_r, M16[0][2]*D_r],\n      [M16[1][0]*D_g, M16[1][1]*D_g, M16[1][2]*D_g],\n      [M16[2][0]*D_b, M16[2][1]*D_b, M16[2][2]*D_b]\n    ]\n\n    this.invMʹ = /* exactInv ? numpy.linalg.inv(this.M_) : */ [\n      [invM16[0][0]/D_r, invM16[0][1]/D_g, invM16[0][2]/D_b],\n      [invM16[1][0]/D_r, invM16[1][1]/D_g, invM16[1][2]/D_b],\n      [invM16[2][0]/D_r, invM16[2][1]/D_g, invM16[2][2]/D_b]\n    ]\n  }\n\n  fromXYZ([ X, Y, Z ]: number[]) {\n    // Step 1: Calculate 'cone' responses\n    // rgb = dot(self.M16, xyz)\n    // Step 2: Complete the color adaptation of the illuminant in\n    //         the corresponding cone response space\n    // rgb_c = (rgb.T * self.D_RGB).T\n    const [ m_0, m_1, m_2 ] = this.Mʹ\n    const RGB_c = [\n      m_0[0]*X + m_0[1]*Y + m_0[2]*Z,\n      m_1[0]*X + m_1[1]*Y + m_1[2]*Z,\n      m_2[0]*X + m_2[1]*Y + m_2[2]*Z\n    ]\n    return forward(this, RGB_c)\n  }\n\n  toXYZ(data: number[], description: string) {\n    // Step 6: Calculate R, G and B\n    // rgb = (rgb_c.T / self.D_RGB).T\n    // Step 7: Calculate X, Y and Z\n    // xyz = self.solve_M16(rgb)\n    const [ R_c, G_c, B_c ] = reverse(this, data, description)\n    const [ m_0, m_1, m_2 ] = this.invMʹ\n    return [\n      m_0[0]*R_c + m_0[1]*G_c + m_0[2]*B_c,\n      m_1[0]*R_c + m_1[1]*G_c + m_1[2]*B_c,\n      m_2[0]*R_c + m_2[1]*G_c + m_2[2]*B_c\n    ]\n  }\n}\n","import { atan2, cos, sin, hypot, exp, log, rad2deg, deg2rad } from './math'\nimport { CAM16 } from './cam16'\n\n// UCS\nconst K_L = 1.0\nconst c_1 = 0.007\nconst c_2 = 0.0228\n\nexport class CAM16UCS extends CAM16 {\n  fromXYZ(xyz: number[]) {\n    // tslint:disable-next-line:whitespace\n    const [J,,, h, M] = super.fromXYZ(xyz)\n    const Jʺ = (1 + 100*c_1)*J / (1 + c_1*J)\n    const Jʹ = Jʺ / K_L\n    const Mʹ = 1/c_2 * log(1 + c_2*M)\n    const hʹ = deg2rad*h\n    return [Jʹ, Mʹ*cos(hʹ), Mʹ*sin(hʹ)]\n  }\n\n  toXYZ([J, a, b]: number[]) {\n    const Jʺ = J * K_L\n    const Jʹ = Jʺ / (1 - (Jʺ - 100)*c_1)\n    const h = rad2deg*atan2(b, a) % 360\n    const M = hypot(a, b)\n    const Mʹ = (exp(M * c_2) - 1) / c_2\n    return super.toXYZ([Jʹ, Mʹ, h], 'JMh')\n  }\n}\n"],"names":[],"mappings":";;;;;;EAAO,MAAM,EACX,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EACpE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EACpE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EACpE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EACvD,GAAG,IAAI,CAAA;AAER,EAAO,MAAM,EACX,QAAQ,EACR,SAAS,EACT,KAAK,EACL,aAAa,EACb,UAAU,EACV,QAAQ,EACR,OAAO,EACP,gBAAgB,EAChB,SAAS,EACT,gBAAgB,EAChB,SAAS,EACT,iBAAiB,EACjB,iBAAiB,EAClB,GAAG,MAAM,CAAA;AAEV,EAAO,MAAM,OAAO,GAAG,EAAE,GAAC,GAAG,CAAA;AAC7B,EAAO,MAAM,OAAO,GAAG,GAAG,GAAC,EAAE,CAAA;AAE7B,EAAO,MAAM,OAAO,GAAG,CAAC,CAAS,KAC/B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAA;;ECvB/C,MAAM,GAAG,GAAG,CAAG,MAAM,EAAE,GAAG,EAAE,OAAO,CAAE,CAAA;;ECHrC,MAAM,MAAM,GAAG,CAAC,EAAY,EAAE,EAAY,KAAK,CAAC,CAAS;MAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UAClC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;UACpB,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;UAChB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;cACtB,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;cACpB,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;cAChB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAA;cAC9B,OAAO,EAAE,GAAG,CAAC,IAAE,EAAE,GAAG,EAAE,CAAC,CAAA;WACxB;OACF;MAED,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAA;EACxB,CAAC,CAAA;AAGD,EAAO,MAAM,YAAY,GAAG,CAAC,CAAW,EAAE,CAAS;MACjD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACV,OAAO,CAAC,CAAA;MAEV,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAC,CAAC,CAAC;UACnB,OAAO,CAAC,CAAC,MAAM,CAAA;MAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UACjC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;UACnB,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;UACf,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;cACpB,OAAO,CAAC,CAAA;OACX;MAED,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAA;EACxB,CAAC,CAAA;;EC5BM,MAAM,OAAO,GAAG,CAAC,GAAU,EAAE,KAAe;MAGjD,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAG,IAAI,CAAA;MACjD,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAG,IAAI,CAAA;MACjD,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAG,IAAI,CAAA;MAIjD,MAAM,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAE,GAAG,GAAC,KAAK,CAAC,CAAA;MACnD,MAAM,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAE,GAAG,GAAC,KAAK,CAAC,CAAA;MACnD,MAAM,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAE,GAAG,GAAC,KAAK,CAAC,CAAA;MAMnD,MAAM,IAAI,GAAG,CAAC,GAAC,IAAI,GAAQ,IAAI,GAAS,IAAI,GAAC,EAAE,CAAA;MAC/C,MAAM,CAAC,GAAQ,IAAI,GAAK,EAAE,GAAC,IAAI,GAAC,EAAE,GAAM,IAAI,GAAC,EAAE,CAAA;MAC/C,MAAM,CAAC,GAAQ,IAAI,GAAC,CAAC,GAAM,IAAI,GAAC,CAAC,GAAK,CAAC,GAAC,IAAI,GAAC,CAAC,CAAA;MAC9C,MAAM,CAAC,GAAQ,IAAI,GAAQ,IAAI,GAAM,EAAE,GAAC,IAAI,GAAC,EAAE,CAAA;MAE/C,MAAM,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA;MACzB,IAAI,CAAC,GAAG,CAAC;UACP,MAAM,KAAK,CAAC,oBAAoB,CAAC,CAAA;MAGnC,MAAM,CAAC,GAAG,CAAC,OAAO,GAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAA;MAI3C,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;MAC1C,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,GAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAA;MAC3C,MAAM,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAA;MACrC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;MACtC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAC,CAAC,IAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;MAG3D,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAC,GAAG,CAAC,GAAG,MAAI,GAAG,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAA;MAG1C,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,GAAC,GAAG,CAAC,CAAA;MAC9B,MAAM,CAAC,GAAG,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,IAAI,UAAU,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAE,IAAI,CAAA;MAMhE,MAAM,CAAC,GAAG,KAAK,GAAC,EAAE,GAAC,GAAG,GAAC,GAAG,CAAC,GAAG,GAAC,GAAG,CAAC,IAAI,GAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAA;MAEjE,MAAM,CAAC,GAAG,CAAC,IAAE,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,IAAE,GAAG,CAAC,CAAC,KAAG,IAAI,CAAA;MAC7C,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU,CAAA;MACxB,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAE,IAAI,CAAA;MAI3B,MAAM,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;MAE5C,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;EAC9B,CAAC,CAAA;;EC3DM,MAAM,OAAO,GAAG,CAAC,GAAU,EAAE,IAAc,EAAE,WAAmB;MACrE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;MAElB,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAC1B,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;UAEX,CAAC,GAAG,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,GAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAE,IAAI,CAAA;OAC1D;WACI;UAGH,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;UACX,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,IAAI,GAAG,CAAC,GAAG,GAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAE,IAAI,KAAG,CAAC,CAAA;OACtD;MAGD,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;UACjC,IAAI,CAAC,EAAE,CAAC,CAAA;UACR,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;cAC1B,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;cACX,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAE,IAAI,CAAA;WACtB;eACI;cACH,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;WACZ;UAMD,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAC,GAAG,CAAC,CAAA;UACnB,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;OACf;WACI;UAEH,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;UAEvB,CAAC,GAAG,CAAC,GAAC,CAAC,GAAC,CAAC,IAAI,GAAG,CAAC,GAAG,GAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAA;OAChC;MAED,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,IAAE,GAAG,CAAC,CAAC,KAAG,IAAI,MAAI,CAAC,GAAC,GAAG,CAAC,CAAA;MAEnD,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAC1B,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;OACZ;WACI;UAGH,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;UACjB,MAAM,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAA;UACpC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;UACnB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAA;UACrC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAA;UACrC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAC,EAAE,KAAG,GAAG,GAAC,EAAE,GAAC,EAAE,GAAC,GAAG,CAAC,GAAC,GAAG,GAAC,EAAE,GAAC,GAAG,KAAK,CAAC,CAAC,GAAC,EAAE,KAAG,GAAG,GAAC,EAAE,CAAC,GAAC,GAAG,GAAC,GAAG,CAAC,CAAA;UAC1E,CAAC,GAAG,EAAE,GAAG,GAAG,CAAA;OACb;MAGD,MAAM,GAAG,GAAG,IAAI,IAAI,GAAG,CAAC,OAAO,GAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAA;MAC7C,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAC,GAAG,MAAI,CAAC,GAAC,GAAG,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAA;MAC5C,MAAM,IAAI,GAAG,GAAG,GAAG,KAAK,GAAC,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAA;MAChD,MAAM,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAA;MAIzB,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,GAAC,CAAC,CAAC,CAAA;MAC5B,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,GAAC,CAAC,CAAC,CAAA;MAC5B,MAAM,CAAC,GAAG,EAAE,IAAE,IAAI,GAAG,KAAK,CAAC,GAAC,CAAC,IAAI,EAAE,GAAC,IAAI,GAAG,EAAE,GAAC,CAAC,GAAC,KAAK,GAAG,GAAG,GAAC,CAAC,GAAC,KAAK,CAAC,CAAA;MACpE,MAAM,CAAC,GAAG,CAAC,GAAC,KAAK,CAAA;MACjB,MAAM,CAAC,GAAG,CAAC,GAAC,KAAK,CAAA;MAGjB,MAAM,IAAI,GAAG,CAAC,GAAG,GAAC,IAAI,GAAG,GAAG,GAAC,CAAC,GAAI,GAAG,GAAC,CAAC,IAAI,IAAI,CAAA;MAC/C,MAAM,IAAI,GAAG,CAAC,GAAG,GAAC,IAAI,GAAG,GAAG,GAAC,CAAC,GAAI,GAAG,GAAC,CAAC,IAAI,IAAI,CAAA;MAC/C,MAAM,IAAI,GAAG,CAAC,GAAG,GAAC,IAAI,GAAG,GAAG,GAAC,CAAC,GAAG,IAAI,GAAC,CAAC,IAAI,IAAI,CAAA;MAG/C,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,MAAI,CAAC,GAAC,IAAI,CAAC,CAAA;MACtF,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,MAAI,CAAC,GAAC,IAAI,CAAC,CAAA;MACtF,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,MAAI,CAAC,GAAC,IAAI,CAAC,CAAA;MAEtF,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAA;EAC1B,CAAC,CAAA;;EChFD,MAAM,GAAG,GAAG;MACV,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;MACjC,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;MACjC,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;GAClC,CAAA;EAID,MAAM,MAAM,GAAG;MACb,CAAC,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,CAAC;MACvC,CAAC,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,CAAC;MACvC,CAAC,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,CAAC;GACxC,CAAA;EAID,MAAM,QAAQ,GAAG,MAAM,CACrB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EACrB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CACtB,CAAA;AAED,QAAa,KAAK;MAehB,YAAY,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAAC,EAAE,GAAC,CAAC,EAAE,EAAE,GAAG,GAAG;UAGrD,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;UAGjB,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;UACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;UACV,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;UAEZ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC,GAAG,GAAG,CAAC,CAAC,CAAA;UACzB,MAAM,EAAE,GAAG,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAA;UAClB,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA;UACjB,IAAI,CAAC,GAAG,GAAG,EAAE,GAAC,GAAG,GAAG,GAAG,GAAC,EAAE,GAAC,EAAE,GAAC,IAAI,CAAC,CAAC,GAAC,GAAG,CAAC,CAAA;UAEzC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA;UAClB,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;UAC5B,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,IAAE,GAAG,CAAA;UAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;UAErB,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,CAAA;UAC/D,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,CAAA;UAC/D,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,CAAA;UAE/D,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,IAAE,CAAC,GAAC,CAAC,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAC,EAAE,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;UAC3D,MAAM,GAAG,GAAG,CAAC,GAAC,GAAG,GAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;UAC7B,MAAM,GAAG,GAAG,CAAC,GAAC,GAAG,GAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;UAC7B,MAAM,GAAG,GAAG,CAAC,GAAC,GAAG,GAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;UAE7B,MAAM,IAAI,GAAG,GAAG,GAAC,GAAG,CAAA;UACpB,MAAM,IAAI,GAAG,GAAG,GAAC,GAAG,CAAA;UACpB,MAAM,IAAI,GAAG,GAAG,GAAC,GAAG,CAAA;UAEpB,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,IAAI,GAAC,GAAG,KAAG,IAAI,CAAA;UACrC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,IAAI,GAAC,GAAG,KAAG,IAAI,CAAA;UACrC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,IAAI,GAAC,GAAG,KAAG,IAAI,CAAA;UAErC,MAAM,IAAI,GAAG,GAAG,GAAC,GAAG,IAAE,GAAG,GAAC,KAAK,CAAC,GAAC,GAAG,CAAA;UACpC,MAAM,IAAI,GAAG,GAAG,GAAC,GAAG,IAAE,GAAG,GAAC,KAAK,CAAC,GAAC,GAAG,CAAA;UACpC,MAAM,IAAI,GAAG,GAAG,GAAC,GAAG,IAAE,GAAG,GAAC,KAAK,CAAC,GAAC,GAAG,CAAA;UACpC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAC,EAAE,GAAG,KAAK,IAAE,IAAI,CAAC,IAAI,CAAA;UAEtD,IAAI,CAAC,CAAC,GAAG,CAAE,KAAK,EAAG,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAE,CAAA;UAClD,IAAI,CAAC,CAAC,GAAG,CAAG,IAAI,EAAI,IAAI,EAAI,IAAI,EAAI,IAAI,EAAI,IAAI,CAAE,CAAA;UAClD,IAAI,CAAC,CAAC,GAAG,CAAG,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAE,CAAA;UAElD,IAAI,CAAC,EAAE,GAAG;cACR,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;cAC7C,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;cAC7C,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;WAC9C,CAAA;UAED,IAAI,CAAC,KAAK,GAAgD;cACxD,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;cACtD,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;cACtD,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;WACvD,CAAA;OACF;MAED,OAAO,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAY;UAM3B,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,GAAG,IAAI,CAAC,EAAE,CAAA;UACjC,MAAM,KAAK,GAAG;cACZ,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC;cAC9B,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC;cAC9B,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC;WAC/B,CAAA;UACD,OAAO,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;OAC5B;MAED,KAAK,CAAC,IAAc,EAAE,WAAmB;UAKvC,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,GAAG,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAA;UAC1D,MAAM,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,GAAG,IAAI,CAAC,KAAK,CAAA;UACpC,OAAO;cACL,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG;cACpC,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG;cACpC,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAC,GAAG;WACrC,CAAA;OACF;GACF;;EC7HD,MAAM,GAAG,GAAG,GAAG,CAAA;EACf,MAAM,GAAG,GAAG,KAAK,CAAA;EACjB,MAAM,GAAG,GAAG,MAAM,CAAA;AAElB,QAAa,QAAS,SAAQ,KAAK;MACjC,OAAO,CAAC,GAAa;UAEnB,MAAM,CAAC,CAAC,MAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;UACtC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAC,GAAG,IAAE,CAAC,IAAI,CAAC,GAAG,GAAG,GAAC,CAAC,CAAC,CAAA;UACxC,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAA;UACnB,MAAM,EAAE,GAAG,CAAC,GAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAC,CAAC,CAAC,CAAA;UACjC,MAAM,EAAE,GAAG,OAAO,GAAC,CAAC,CAAA;UACpB,OAAO,CAAC,EAAE,EAAE,EAAE,GAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;OACpC;MAED,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAW;UACvB,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAA;UAClB,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAE,GAAG,CAAC,CAAA;UACpC,MAAM,CAAC,GAAG,OAAO,GAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAA;UACnC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;UACrB,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAA;UACnC,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;OACvC;GACF;;;;;;;;;;;;;"}